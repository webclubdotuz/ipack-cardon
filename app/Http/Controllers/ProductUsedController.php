<?php

namespace App\Http\Controllers;

use App\Models\Product;
use Illuminate\Http\Request;
use App\Models\ProductUsed;
use App\Services\TelegramService;

class ProductUsedController extends Controller
{

    public function index()
    {
        $productUseds = ProductUsed::latest()->get();

        foreach ($productUseds as $productUsed) {

            $product = Product::find($productUsed->product_id);
            $last_purchase_price = $product?->purchases->last()->price ?? 0;

            $productUsed->price = $last_purchase_price;
            $productUsed->total = $last_purchase_price * $productUsed->quantity;
            $productUsed->save();
        }

        return 'success';
    }

    public function store(Request $request)
    {
        $request->validate([
            'product_id' => 'required|exists:products,id',
            'quantity' => 'required|numeric',
            'description' => 'nullable|string',
        ]);

        $product = Product::find($request->product_id);

        if ($product->quantity < $request->quantity) {
            return back()->with('error', '–û—à–∏–±–∫–∞! –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ');
        }

        if ($product->shop)
        {
            return back()->with('error', '–û—à–∏–±–∫–∞! –¢–æ–≤–∞—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–æ–¥–∞–∂–µ');
        }

        $product->quantity -= $request->quantity;
        $product->save();

        $last_purchase_price = $product?->purchases->last()->price ?? 0;

        ProductUsed::create([
            'product_id' => $request->product_id,
            'user_id' => auth()->user()->id,
            'quantity' => $request->quantity,
            'price' => $last_purchase_price,
            'total' => $last_purchase_price * $request->quantity,
            'description' => $request->description,
        ]);

        // üõ†–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–∞—Å—Ö–æ–¥
        // üì¶–ü—Ä–æ–¥—É–∫—Ç: –ö—Ä–∞—Ö–º–∞–ª –∫–ª–µ–π (–†–æ—Å—Å–∏—è)
        // üñá–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: 28 –∫–≥
        // üìÖ –î–∞—Ç–∞: 16 Mar 2024 08:04
        // üë®‚Äçüíª –°–æ—Ç—Ä—É–¥–Ω–∏–∫: –ò–±—Ä–æ—Ö–∏–º –ê–±–¥—É–ª–ª–∞–µ–≤

        $text = "üõ†–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–∞—Å—Ö–æ–¥\n";
        $text .= "üì¶–ü—Ä–æ–¥—É–∫—Ç: {$product->name}\n";
        $text .= "üñá–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {$request->quantity} {$product->unit}\n";
        $text .= "üí∞–¶–µ–Ω–∞: {$last_purchase_price} —Å—É–º\n";
        $text .= "üíµ–°—É–º–º–∞: " . $last_purchase_price * $request->quantity . " —Å—É–º\n";
        $text .= "üìÖ –î–∞—Ç–∞: " . now()->format('d M Y H:i') . "\n";
        $text .= "üë®‚Äçüíª –°–æ—Ç—Ä—É–¥–Ω–∏–∫: " . auth()->user()->fullname;

        TelegramService::sendChannel($text);

        return back()->with('success', '–¢–æ–≤–∞—Ä —Å–ø–∏—Å–∞–Ω —Å–æ —Å–∫–ª–∞–¥–∞');
    }
}
